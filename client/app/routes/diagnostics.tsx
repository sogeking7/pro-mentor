import GoBackButton from "@/components/custom/GoBackButton";
import { PageTitle } from "@/components/custom/PageTitle";
import React, { useState } from "react";
import { SideBar, type SideBarSections } from "@/components/custom/SideBar";

export default function DiagnosticsPage() {
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [diagnosticAnswers, setDiagnosticAnswers] = useState({});
  const [showDiagnosticResults, setShowDiagnosticResults] = useState(false);

  const diagnosticQuestions = [
    {
      id: "position",
      title: "“ö—ã–∑–º–µ—Ç –µ—Ç—É –±–∞“ì—ã—Ç—ã (–ª–∞—É–∞–∑—ã–º)",
      type: "single",
      options: [
        "–°—Ç—É–¥–µ–Ω—Ç/–ë–æ–ª–∞—à–∞“õ –º“±“ì–∞–ª—ñ–º",
        "–ë–∞—Å—Ç–∞—É—ã—à —Å—ã–Ω—ã–ø –º“±“ì–∞–ª—ñ–º—ñ",
        "“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–ê“ì—ã–ª—à—ã–Ω –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–û—Ä—ã—Å —Ç—ñ–ª—ñ –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–¢–∞—Ä–∏—Ö –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–§–∏–∑–∏–∫–∞ –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–•–∏–º–∏—è –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–ë–∏–æ–ª–æ–≥–∏—è –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
        "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø”ô–Ω—ñ –º“±“ì–∞–ª—ñ–º—ñ",
      ],
    },
    {
      id: "experience",
      title: "–ñ“±–º—ã—Å ”©—Ç—ñ–ª—ñ / –û“õ—É –∫–µ–∑–µ“£—ñ",
      type: "single",
      options: [
        "–°—Ç—É–¥–µ–Ω—Ç (1-2 –∫—É—Ä—Å)",
        "–°—Ç—É–¥–µ–Ω—Ç (3-4 –∫—É—Ä—Å)",
        "–¢”ô–∂—ñ—Ä–∏–±–µ –∂–æ“õ (–∂–∞“£–∞ –±—ñ—Ç—ñ—Ä–≥–µ–Ω)",
        "3 –∞–π –º–µ–Ω 6 –∞–π –∞—Ä–∞–ª—ã“ì—ã",
        "6-12 –∞–π –∞—Ä–∞–ª—ã“ì—ã",
        "1 –∂—ã–ª-3 –∂—ã–ª –∞—Ä–∞–ª—ã“ì—ã",
        "3 –∂—ã–ª - 5 –∂—ã–ª –∞—Ä–∞–ª—ã“ì—ã",
        "5 –∂—ã–ª-8 –∂—ã–ª –∞—Ä–∞–ª—ã“ì—ã",
        "8 –∂—ã–ª-10 –∂—ã–ª –∞—Ä–∞–ª—ã“ì—ã",
        "10 –∂—ã–ª–¥–∞–Ω –∞—Å—Ç–∞–º",
      ],
    },
    {
      id: "digital_skills",
      title: "–¶–∏—Ñ—Ä–ª—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä–º–µ–Ω –∂“±–º—ã—Å –¥–∞“ì–¥—ã–ª–∞—Ä—ã",
      type: "single",
      options: [
        "–ë–∞–∑–∞–ª—ã“õ –¥–µ“£–≥–µ–π (Word, PowerPoint)",
        "–û—Ä—Ç–∞—à–∞ –¥–µ“£–≥–µ–π (Excel, –æ–Ω–ª–∞–π–Ω –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–ª–∞—Ä)",
        "–ñ–∞“õ—Å—ã –¥–µ“£–≥–µ–π (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤—Ç—ñ —Ç–∞“õ—Ç–∞–ª–∞—Ä, –±—ñ–ª—ñ–º –±–µ—Ä—É “õ–æ—Å—ã–º—à–∞–ª–∞—Ä—ã)",
        "–ñ–æ“ì–∞—Ä—ã –¥–µ“£–≥–µ–π (AI “õ“±—Ä–∞–ª–¥–∞—Ä, –∫–æ–¥—Ç–∞—É –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ)",
        "–≠–∫—Å–ø–µ—Ä—Ç –¥–µ“£–≥–µ–π (–∂–∞“£–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä–¥—ã –µ–Ω–≥—ñ–∑—É, –±–∞—Å“õ–∞–ª–∞—Ä–¥—ã “Ø–π—Ä–µ—Ç—É)",
      ],
    },
    {
      id: "challenges",
      title: "–ö”ô—Å—ñ–±–∏ “õ—ã–∑–º–µ—Ç—Ç–µ–≥—ñ –Ω–µ–≥—ñ–∑–≥—ñ “õ–∏—ã–Ω–¥—ã“õ—Ç–∞—Ä",
      type: "multiple",
      options: [
        "–û“õ—É—à—ã–ª–∞—Ä–¥—ã –º–æ—Ç–∏–≤–∞—Ü–∏—è–ª–∞—É",
        "–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–Ω—ã —Å–∞“õ—Ç–∞—É",
        "–ê—Ç–∞-–∞–Ω–∞–ª–∞—Ä–º–µ–Ω “õ–∞—Ä—ã–º-“õ–∞—Ç—ã–Ω–∞—Å",
        "–ñ–∞“£–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä–¥—ã –º–µ“£–≥–µ—Ä—É",
        "–£–∞“õ—ã—Ç—Ç—ã –±–∞—Å“õ–∞—Ä—É",
        "–°–∞–±–∞“õ—Ç—ã –∂–æ—Å–ø–∞—Ä–ª–∞—É",
        "–ë–∞“ì–∞–ª–∞—É –∂“Ø–π–µ—Å—ñ",
        "–ö”ô—Å—ñ–±–∏ “õ“±–∂–∞—Ç—Ç–∞–º–∞",
        "–°—Ç—Ä–µ—Å—Å –∂”ô–Ω–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª–¥—ã –∂“Ø–∫—Ç–µ–º–µ",
        "–ö”ô—Å—ñ–±–∏ –¥–∞–º—É“ì–∞ —É–∞“õ—ã—Ç —Ç–∞–ø—É",
      ],
    },
    {
      id: "goals",
      title: "–ö”ô—Å—ñ–±–∏ –¥–∞–º—É–¥–∞“ì—ã –±–∞—Å—ã–º –±–∞“ì—ã—Ç—Ç–∞—Ä",
      type: "multiple",
      options: [
        "–ü”ô–Ω–¥—ñ–∫ –±—ñ–ª—ñ–º–¥—ñ —Ç–µ—Ä–µ“£–¥–µ—Ç—É",
        "–ñ–∞“£–∞ –æ“õ—ã—Ç—É ”ô–¥—ñ—Å—Ç–µ—Ä—ñ–Ω –º–µ“£–≥–µ—Ä—É",
        "AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä—ã–Ω “õ–æ–ª–¥–∞–Ω—É",
        "–î–∞—Ä—ã–Ω–¥—ã –±–∞–ª–∞–ª–∞—Ä–º–µ–Ω –∂“±–º—ã—Å",
        "–ò–Ω–∫–ª—é–∑–∏–≤—Ç—ñ –±—ñ–ª—ñ–º –±–µ—Ä—É",
        "–õ–∏–¥–µ—Ä–ª—ñ–∫ –¥–∞“ì–¥—ã–ª–∞—Ä–¥—ã –¥–∞–º—ã—Ç—É",
        "–ó–µ—Ä—Ç—Ç–µ—É—à—ñ–ª—ñ–∫ “õ—ã–∑–º–µ—Ç",
        "–•–∞–ª—ã“õ–∞—Ä–∞–ª—ã“õ —Ç”ô–∂—ñ—Ä–∏–±–µ –∞–ª—É",
        "–°–∞–Ω–∞—Ç –∫”©—Ç–µ—Ä—É",
        "”®–∑ –±–∏–∑–Ω–µ—Å—ñ–Ω –±–∞—Å—Ç–∞—É",
      ],
    },
    {
      id: "learning_style",
      title: "–°—ñ–∑ “Ø—à—ñ–Ω —Ç–∏—ñ–º–¥—ñ –æ“õ—ã—Ç—É —Ñ–æ—Ä–º–∞—Ç—ã",
      type: "single",
      options: [
        "–û–Ω–ª–∞–π–Ω –∫—É—Ä—Å—Ç–∞—Ä (”©–∑ “õ–∞—Ä“õ—ã–Ω—ã–º–µ–Ω)",
        "–¢—ñ–∫–µ–ª–µ–π —Å–µ–º–∏–Ω–∞—Ä–ª–∞—Ä –º–µ–Ω —Ç—Ä–µ–Ω–∏–Ω–≥—Ç–µ—Ä",
        "–ú–µ–Ω—Ç–æ—Ä–ª—ã“õ–ø–µ–Ω –∂–µ–∫–µ –∂“±–º—ã—Å",
        "–¢–æ–ø—Ç—ã“õ –∂–æ–±–∞–ª–∞—Ä –º–µ–Ω —Ç”ô–∂—ñ—Ä–∏–±–µ –∞–ª–º–∞—Å—É",
        "”®–∑—ñ–Ω–¥—ñ–∫ –∑–µ—Ä—Ç—Ç–µ—É –∂”ô–Ω–µ –∫—ñ—Ç–∞–ø –æ“õ—É",
        "–ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä –º–µ–Ω –∫–µ–π—Å—Ç–µ—Ä",
        "–í–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä –º–µ–Ω –ø–æ–¥–∫–∞—Å—Ç–µ—Ä",
        "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è–ª–∞—Ä –º–µ–Ω —Ñ–æ—Ä—É–º–¥–∞—Ä",
      ],
    },
  ];

  const handleDiagnosticAnswer = (
    questionId: string,
    answer: string,
    isMultiple = false,
  ) => {
    if (isMultiple) {
      const currentAnswers = diagnosticAnswers[questionId] || [];
      const newAnswers = currentAnswers.includes(answer)
        ? currentAnswers.filter((a) => a !== answer)
        : [...currentAnswers, answer];
      setDiagnosticAnswers({ ...diagnosticAnswers, [questionId]: newAnswers });
    } else {
      setDiagnosticAnswers({ ...diagnosticAnswers, [questionId]: answer });
    }
  };

  const nextDiagnosticQuestion = () => {
    if (currentQuestionIndex < diagnosticQuestions.length - 1) {
      setCurrentQuestionIndex(currentQuestionIndex + 1);
    } else {
      setShowDiagnosticResults(true);
    }
  };

  const prevDiagnosticQuestion = () => {
    if (currentQuestionIndex > 0) {
      setCurrentQuestionIndex(currentQuestionIndex - 1);
    }
  };

  const resetDiagnostic = () => {
    setCurrentQuestionIndex(0);
    setDiagnosticAnswers({});
    setShowDiagnosticResults(false);
  };

  const generateRecommendations = () => {
    const experience = diagnosticAnswers.experience;
    const position = diagnosticAnswers.position;
    const digitalSkills = diagnosticAnswers.digital_skills;
    const challenges = diagnosticAnswers.challenges || [];
    const goals = diagnosticAnswers.goals || [];

    let recommendations = [];

    // Experience-based recommendations
    if (
      experience &&
      (experience.includes("–°—Ç—É–¥–µ–Ω—Ç") || experience.includes("–¢”ô–∂—ñ—Ä–∏–±–µ –∂–æ“õ"))
    ) {
      recommendations.push({
        title: "–ë–∞–∑–∞–ª—ã“õ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã“õ –¥–∞“ì–¥—ã–ª–∞—Ä",
        description: "–°–∞–±–∞“õ –∂–æ—Å–ø–∞—Ä–ª–∞—É, —Å—ã–Ω—ã–ø –±–∞—Å“õ–∞—Ä—É –∂”ô–Ω–µ –±–∞“ì–∞–ª–∞—É –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ",
        priority: "–ñ–æ“ì–∞—Ä—ã",
        icon: "üìö",
      });
    }

    // Digital skills recommendations
    if (digitalSkills && digitalSkills.includes("–ë–∞–∑–∞–ª—ã“õ –¥–µ“£–≥–µ–π")) {
      recommendations.push({
        title: "–¶–∏—Ñ—Ä–ª—ã —Å–∞—É–∞—Ç—Ç—ã–ª—ã“õ",
        description:
          "–ó–∞–º–∞–Ω–∞—É–∏ –±—ñ–ª—ñ–º –±–µ—Ä—É —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä—ã –º–µ–Ω –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–ª–∞—Ä–¥—ã –º–µ“£–≥–µ—Ä—É",
        priority: "–û—Ä—Ç–∞—à–∞",
        icon: "üíª",
      });
    }

    // Challenge-based recommendations
    if (challenges.includes("–û“õ—É—à—ã–ª–∞—Ä–¥—ã –º–æ—Ç–∏–≤–∞—Ü–∏—è–ª–∞—É")) {
      recommendations.push({
        title: "–ú–æ—Ç–∏–≤–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏–∫–∞–ª–∞—Ä—ã",
        description: "–û“õ—É—à—ã–ª–∞—Ä–¥—ã“£ “õ—ã–∑—ã“ì—É—à—ã–ª—ã“ì—ã–Ω –∞—Ä—Ç—Ç—ã—Ä—É ”ô–¥—ñ—Å—Ç–µ—Ä—ñ",
        priority: "–ñ–æ“ì–∞—Ä—ã",
        icon: "üéØ",
      });
    }

    if (challenges.includes("–°—Ç—Ä–µ—Å—Å –∂”ô–Ω–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª–¥—ã –∂“Ø–∫—Ç–µ–º–µ")) {
      recommendations.push({
        title: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª–¥—ã“õ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç",
        description: "–°—Ç—Ä–µ—Å—Å –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—ñ –∂”ô–Ω–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª–¥—ã“õ —Ç–µ–ø–µ-—Ç–µ“£–¥—ñ–∫",
        priority: "–ñ–æ“ì–∞—Ä—ã",
        icon: "üßò",
      });
    }

    // Goals-based recommendations
    if (goals.includes("AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä—ã–Ω “õ–æ–ª–¥–∞–Ω—É")) {
      recommendations.push({
        title: "AI –±—ñ–ª—ñ–º –±–µ—Ä—É–¥–µ",
        description: "–ñ–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç “õ“±—Ä–∞–ª–¥–∞—Ä—ã–Ω –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞–¥–∞ “õ–æ–ª–¥–∞–Ω—É",
        priority: "–ñ–∞“£–∞—à—ã–ª",
        icon: "ü§ñ",
      });
    }

    if (goals.includes("–î–∞—Ä—ã–Ω–¥—ã –±–∞–ª–∞–ª–∞—Ä–º–µ–Ω –∂“±–º—ã—Å")) {
      recommendations.push({
        title: "–î–∞—Ä—ã–Ω–¥—ã –±–∞–ª–∞–ª–∞—Ä –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞—Å—ã",
        description: "–ï—Ä–µ–∫—à–µ “õ–∞–±—ñ–ª–µ—Ç—Ç—ñ –æ“õ—É—à—ã–ª–∞—Ä–º–µ–Ω –∂“±–º—ã—Å –∂–∞—Å–∞—É ”ô–¥—ñ—Å—Ç–µ–º–µ—Å—ñ",
        priority: "–ê—Ä–Ω–∞–π—ã",
        icon: "‚≠ê",
      });
    }

    return recommendations.length > 0
      ? recommendations
      : [
          {
            title: "–ñ–∞–ª–ø—ã –∫”ô—Å—ñ–±–∏ –¥–∞–º—É",
            description: "–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã“õ —à–µ–±–µ—Ä–ª—ñ–∫—Ç—ñ –∂–µ—Ç—ñ–ª–¥—ñ—Ä—É",
            priority: "–ë–∞–∑–∞–ª—ã“õ",
            icon: "üìà",
          },
        ];
  };

  const sections: SideBarSections = [
    {
      title: "üìà –ö”ô—Å—ñ–±–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
      content: (
        <div className="space-y-6">
          {!showDiagnosticResults ? (
            <div>
              {currentQuestionIndex === 0 ? (
                <div className="mb-8 rounded-2xl bg-gradient-to-r from-blue-50 to-purple-50 p-8 text-center">
                  <div className="mb-4 text-4xl">üî¨</div>
                  <h3 className="mb-4 text-2xl font-bold">
                    AI-–Ω–µ–≥—ñ–∑–¥–µ–ª–≥–µ–Ω –∫”ô—Å—ñ–±–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                  </h3>
                  <p className="mb-6 text-gray-600">
                    –ñ–µ–∫–µ –¥–∞–º—ã—Ç—É –∂–æ—Å–ø–∞—Ä—ã–Ω –∞–ª—É “Ø—à—ñ–Ω 6 —Å“±—Ä–∞“õ“õ–∞ –∂–∞—É–∞–ø –±–µ—Ä—ñ“£—ñ–∑.
                    –ë–∞—Ä–ª—ã“õ –¥–µ—Ä–µ–∫—Ç–µ—Ä “õ“±–ø–∏—è —Å–∞“õ—Ç–∞–ª–∞–¥—ã.
                  </p>
                  <button
                    onClick={nextDiagnosticQuestion}
                    className="transform rounded-full bg-gradient-to-r from-blue-600 to-purple-600 px-8 py-3 font-semibold text-white transition-all duration-300 hover:-translate-y-1 hover:shadow-lg"
                  >
                    –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞–Ω—ã –±–∞—Å—Ç–∞—É
                  </button>
                </div>
              ) : (
                <div>
                  <div className="mb-6">
                    <div className="mb-2 flex justify-between text-sm">
                      <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                      <span>
                        {currentQuestionIndex} / {diagnosticQuestions.length}
                      </span>
                    </div>
                    <div className="h-2 w-full rounded-full bg-gray-200">
                      <div
                        className="h-2 rounded-full bg-gradient-to-r from-blue-600 to-purple-600 transition-all duration-300"
                        style={{
                          width: `${(currentQuestionIndex / diagnosticQuestions.length) * 100}%`,
                        }}
                      ></div>
                    </div>
                  </div>

                  <div className="rounded-2xl border border-gray-200 bg-white p-6">
                    <h3 className="mb-6 text-xl font-bold text-gray-800">
                      {diagnosticQuestions[currentQuestionIndex - 1]?.title}
                    </h3>

                    <div className="mb-6 space-y-3">
                      {diagnosticQuestions[
                        currentQuestionIndex - 1
                      ]?.options.map((option, index) => (
                        <button
                          key={index}
                          onClick={() =>
                            handleDiagnosticAnswer(
                              diagnosticQuestions[currentQuestionIndex - 1].id,
                              option,
                              diagnosticQuestions[currentQuestionIndex - 1]
                                .type === "multiple",
                            )
                          }
                          className={`w-full rounded-xl border-2 p-4 text-left transition-all duration-200 ${
                            diagnosticQuestions[currentQuestionIndex - 1]
                              .type === "multiple"
                              ? diagnosticAnswers[
                                  diagnosticQuestions[currentQuestionIndex - 1]
                                    .id
                                ]?.includes(option)
                                ? "border-blue-500 bg-blue-50 text-blue-700"
                                : "border-gray-200 hover:border-blue-300 hover:bg-blue-50"
                              : diagnosticAnswers[
                                    diagnosticQuestions[
                                      currentQuestionIndex - 1
                                    ].id
                                  ] === option
                                ? "border-blue-500 bg-blue-50 text-blue-700"
                                : "border-gray-200 hover:border-blue-300 hover:bg-blue-50"
                          }`}
                        >
                          <div className="flex items-center">
                            <div
                              className={`mr-3 h-4 w-4 rounded-full border-2 ${
                                diagnosticQuestions[currentQuestionIndex - 1]
                                  .type === "multiple"
                                  ? diagnosticAnswers[
                                      diagnosticQuestions[
                                        currentQuestionIndex - 1
                                      ].id
                                    ]?.includes(option)
                                    ? "border-blue-500 bg-blue-500"
                                    : "border-gray-300"
                                  : diagnosticAnswers[
                                        diagnosticQuestions[
                                          currentQuestionIndex - 1
                                        ].id
                                      ] === option
                                    ? "border-blue-500 bg-blue-500"
                                    : "border-gray-300"
                              }`}
                            >
                              {((diagnosticQuestions[currentQuestionIndex - 1]
                                .type === "multiple" &&
                                diagnosticAnswers[
                                  diagnosticQuestions[currentQuestionIndex - 1]
                                    .id
                                ]?.includes(option)) ||
                                (diagnosticQuestions[currentQuestionIndex - 1]
                                  .type === "single" &&
                                  diagnosticAnswers[
                                    diagnosticQuestions[
                                      currentQuestionIndex - 1
                                    ].id
                                  ] === option)) && (
                                <div className="m-0.5 h-2 w-2 rounded-full bg-white"></div>
                              )}
                            </div>
                            {option}
                          </div>
                        </button>
                      ))}
                    </div>

                    <div className="flex justify-between">
                      <button
                        onClick={prevDiagnosticQuestion}
                        className="rounded-full border-2 border-gray-300 px-6 py-3 font-semibold text-gray-700 transition-all duration-300 hover:bg-gray-50"
                      >
                        –ê—Ä—Ç“õ–∞
                      </button>

                      <button
                        onClick={nextDiagnosticQuestion}
                        disabled={
                          !diagnosticAnswers[
                            diagnosticQuestions[currentQuestionIndex - 1]?.id
                          ]
                        }
                        className="transform rounded-full bg-gradient-to-r from-blue-600 to-purple-600 px-6 py-3 font-semibold text-white transition-all duration-300 hover:-translate-y-1 hover:shadow-lg disabled:transform-none disabled:cursor-not-allowed disabled:opacity-50"
                      >
                        {currentQuestionIndex === diagnosticQuestions.length
                          ? "–ê—è“õ—Ç–∞—É"
                          : "–ö–µ–ª–µ—Å—ñ"}
                      </button>
                    </div>
                  </div>
                </div>
              )}
            </div>
          ) : (
            <div>
              <div className="mb-8 text-center">
                <div className="mb-4 text-6xl">üéâ</div>
                <h2 className="mb-4 text-3xl font-bold text-gray-800">
                  –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ
                </h2>
                <p className="text-gray-600">
                  –°—ñ–∑–¥—ñ“£ –∂–∞—É–∞–ø—Ç–∞—Ä—ã“£—ã–∑ –Ω–µ–≥—ñ–∑—ñ–Ω–¥–µ “õ“±—Ä–∞—Å—Ç—ã—Ä—ã–ª“ì–∞–Ω –∂–µ–∫–µ –¥–∞–º—É –∂–æ—Å–ø–∞—Ä—ã
                </p>
              </div>

              <div className="mb-8 grid grid-cols-1 gap-8 lg:grid-cols-2">
                <div className="rounded-2xl border border-blue-100 bg-blue-50 p-6">
                  <h3 className="mb-4 text-xl font-semibold text-blue-800">
                    üìã –°—ñ–∑–¥—ñ“£ –ø—Ä–æ—Ñ–∏–ª—ñ“£—ñ–∑
                  </h3>
                  <div className="space-y-3 text-sm">
                    <div className="flex justify-between">
                      <span className="font-medium text-gray-600">
                        –õ–∞—É–∞–∑—ã–º:
                      </span>
                      <span className="text-gray-800">
                        {diagnosticAnswers.position}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span className="font-medium text-gray-600">
                        –¢”ô–∂—ñ—Ä–∏–±–µ:
                      </span>
                      <span className="text-gray-800">
                        {diagnosticAnswers.experience}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span className="font-medium text-gray-600">
                        –¶–∏—Ñ—Ä–ª—ã –¥–∞“ì–¥—ã–ª–∞—Ä:
                      </span>
                      <span className="text-gray-800">
                        {diagnosticAnswers.digital_skills}
                      </span>
                    </div>
                  </div>
                </div>

                <div className="rounded-2xl border border-green-100 bg-green-50 p-6">
                  <h3 className="mb-4 text-xl font-semibold text-green-800">
                    üéØ –ñ–µ–∫–µ “±—Å—ã–Ω—ã—Å—Ç–∞—Ä
                  </h3>
                  <div className="space-y-3">
                    {generateRecommendations()
                      .slice(0, 3)
                      .map((rec, index) => (
                        <div key={index} className="flex items-start space-x-3">
                          <span className="text-xl">{rec.icon}</span>
                          <div>
                            <div className="text-sm font-semibold text-gray-800">
                              {rec.title}
                            </div>
                            <div className="text-xs text-gray-600">
                              {rec.description}
                            </div>
                            <span
                              className={`mt-1 inline-block rounded-full px-2 py-1 text-xs font-medium ${
                                rec.priority === "–ñ–æ“ì–∞—Ä—ã"
                                  ? "bg-red-100 text-red-700"
                                  : rec.priority === "–û—Ä—Ç–∞—à–∞"
                                    ? "bg-yellow-100 text-yellow-700"
                                    : "bg-blue-100 text-blue-700"
                              }`}
                            >
                              {rec.priority}
                            </span>
                          </div>
                        </div>
                      ))}
                  </div>
                </div>
              </div>

              <div className="mb-8 rounded-2xl border border-purple-100 bg-gradient-to-r from-purple-50 to-blue-50 p-8">
                <h3 className="mb-4 text-xl font-semibold text-purple-800">
                  üìö “∞—Å—ã–Ω—ã–ª–∞—Ç—ã–Ω –∫—É—Ä—Å—Ç–∞—Ä
                </h3>
                <div className="grid grid-cols-1 gap-4 md:grid-cols-2">
                  {generateRecommendations().map((rec, index) => (
                    <div
                      key={index}
                      className="rounded-xl border border-purple-100 bg-white p-4"
                    >
                      <div className="mb-2 flex items-center space-x-3">
                        <span className="text-2xl">{rec.icon}</span>
                        <div>
                          <div className="font-semibold text-gray-800">
                            {rec.title}
                          </div>
                          <div className="text-sm text-gray-600">
                            {rec.description}
                          </div>
                        </div>
                      </div>
                      <button className="mt-3 w-full rounded-lg bg-purple-600 px-4 py-2 text-sm text-white transition-all hover:bg-purple-700">
                        –ö—É—Ä—Å“õ–∞ –∂–∞–∑—ã–ª—É
                      </button>
                    </div>
                  ))}
                </div>
              </div>

              <div className="text-center">
                <button
                  onClick={resetDiagnostic}
                  className="mr-4 transform rounded-full bg-gradient-to-r from-blue-600 to-purple-600 px-8 py-3 font-semibold text-white transition-all duration-300 hover:-translate-y-1 hover:shadow-lg"
                >
                  “ö–∞–π—Ç–∞–¥–∞–Ω ”©—Ç—É
                </button>
              </div>
            </div>
          )}
        </div>
      ),
    },
    {
      title: "üìù –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è–ª—ã“õ —Ç–µ—Å—Ç—ñ–ª–µ—Ä",
      content: (
        <div className="space-y-6">
          <div className="rounded-lg bg-green-50 p-4">
            <h4 className="mb-2 font-semibold">
              –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è–ª—ã“õ —Ç–µ—Å—Ç—ñ–ª–µ—Ä –Ω–µ “Ø—à—ñ–Ω –∫–µ—Ä–µ–∫?
            </h4>
            <p className="text-gray-700">
              –ñ–µ–∫–µ —Ç“±–ª“ì–∞–ª—ã“õ –µ—Ä–µ–∫—à–µ–ª—ñ–∫—Ç–µ—Ä–¥—ñ, “õ–∞–±—ñ–ª–µ—Ç—Ç–µ—Ä–¥—ñ –∂”ô–Ω–µ –¥–∞–º—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—ã–Ω
              –∞–Ω—ã“õ—Ç–∞—É “Ø—à—ñ–Ω.
            </p>
          </div>

          <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
            {[
              {
                title: "16 Personalities (MBTI –Ω–µ–≥—ñ–∑—ñ–Ω–¥–µ)",
                description:
                  "–°—ñ–∑–¥—ñ“£ –æ–π–ª–∞—É, “õ–∞—Ä—ã–º-“õ–∞—Ç—ã–Ω–∞—Å, —à–µ—à—ñ–º “õ–∞–±—ã–ª–¥–∞—É —Å—Ç–∏–ª—ñ“£—ñ–∑–≥–µ “õ–∞—Ä–∞–π 16 —Ç–∏–ø—Ç—ñ“£ –±—ñ—Ä—ñ–Ω–µ –∂–∞—Ç“õ—ã–∑–∞–¥—ã.",
                result:
                  "–°–∏–ø–∞—Ç—Ç–∞–º–∞, –∫“Ø—à—Ç—ñ –∂”ô–Ω–µ ”ô–ª—Å—ñ–∑ —Ç“±—Å—Ç–∞—Ä—ã“£—ã–∑, “õ–∞—Ä—ã–º-“õ–∞—Ç—ã–Ω–∞—Å—Ç–∞“ì—ã –º—ñ–Ω–µ–∑—ñ“£—ñ–∑, –∂“±–º—ã—Å —Å—Ç–∏–ª—ñ“£—ñ–∑.",
                time: "10‚Äì12 –º–∏–Ω—É—Ç",
                icon: "üß¨", // Represents personality & individuality
                color: "blue",
                link: "https://www.16personalities.com",
              },
              {
                title: "Big Five Personality Test (OCEAN –º–æ–¥–µ–ª—ñ)",
                description:
                  "5 –Ω–µ–≥—ñ–∑–≥—ñ “õ–∞—Å–∏–µ—Ç –±–æ–π—ã–Ω—à–∞ (–∞—à—ã“õ—Ç—ã“õ, –∂–∞—É–∞–ø–∫–µ—Ä—à—ñ–ª—ñ–∫, —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è, —ã–Ω—Ç—ã–º–∞“õ—Ç–∞—Å—Ç—ã“õ, —ç–º–æ—Ü–∏—è–ª—ã“õ —Ç“±—Ä–∞“õ—Ç—ã–ª—ã“õ) ”©–ª—à–µ–π–¥—ñ.",
                result:
                  "–°—ñ–∑ “õ–∞–Ω–¥–∞–π —Ç“±–ª“ì–∞—Å—ã–∑, “õ–∞–π “õ–∞—Å–∏–µ—Ç—ñ“£—ñ–∑ –±–∞—Å—ã–º, –¥–∞–º—É –∞–π–º–∞“õ—Ç–∞—Ä—ã“£—ã–∑.",
                time: "10‚Äì15 –º–∏–Ω—É—Ç",
                icon: "üìä", // Reflects data-driven traits and analysis
                color: "red",
                link: "https://bigfive-test.com",
              },
              {
                title: "HIGH5 Test",
                description: "Gallup —Å—Ç–∏–ª—ñ–Ω–¥–µ –∫“Ø—à—Ç—ñ –∂–∞“õ—Ç–∞—Ä—ã“£—ã–∑–¥—ã –∞–Ω—ã“õ—Ç–∞–π–¥—ã.",
                result:
                  "–ñ“±–º—ã—Å—Ç–∞, ”©–º—ñ—Ä–¥–µ –∂”ô–Ω–µ –∫–æ–º–∞–Ω–¥–∞–¥–∞ –Ω–µ–≥–µ –±–µ–π—ñ–º –µ–∫–µ–Ω—ñ“£—ñ–∑ —Ç—É—Ä–∞–ª—ã –∫–µ“£–µ—Å –±–µ—Ä–µ–¥—ñ.",
                time: "15‚Äì20 –º–∏–Ω—É—Ç",
                icon: "üí™", // Strengths and power
                color: "yellow",
                link: "https://high5test.com",
              },
              {
                title: "Truity (MBTI, DISC, Enneagram, Career test –∂”ô–Ω–µ —Ç.–±.)",
                description:
                  "–¢“Ø—Ä–ª—ñ –ø—Å–∏—Ö–æ—Ç–∏–ø—Ç—ñ–∫ —Ç–µ—Å—Ç—Ç–µ—Ä “±—Å—ã–Ω–∞–¥—ã (—Ç“±–ª“ì–∞–ª—ã“õ, –∫”ô—Å—ñ–±–∏, —ç–º–æ—Ü–∏–æ–Ω–∞–ª–¥—ã“õ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –º–∞—Ö–∞–±–±–∞—Ç —Å—Ç–∏–ª—ñ —Ç.–±.)",
                result: "“ö—ã—Å“õ–∞—à–∞ –µ—Å–µ–ø —Ç–µ–≥—ñ–Ω, —Ç–æ–ª—ã“õ –µ—Å–µ–ø–∫–µ –∞“õ—ã–ª—ã –Ω“±—Å“õ–∞ –±–∞—Ä.",
                time: "10‚Äì25 –º–∏–Ω—É—Ç",
                icon: "üß†", // Variety of mental/personality tools
                color: "green",
                link: "https://www.truity.com",
              },
              {
                title: "Enneagram Personality Test",
                description: "–°—ñ–∑–¥—ñ“£ —Ç“±–ª“ì–∞“£—ã–∑–¥—ã 9 –∞—Ä—Ö–µ—Ç–∏–ø—Ç—ñ“£ –±—ñ—Ä—ñ–Ω–µ –∂–∞—Ç“õ—ã–∑–∞–¥—ã.",
                result:
                  "–Ü—à–∫—ñ –º–æ—Ç–∏–≤–∞—Ü–∏—è–ª–∞—Ä—ã“£—ã–∑, “õ–æ—Ä“õ—ã–Ω—ã—à—Ç–∞—Ä—ã“£—ã–∑ –∂”ô–Ω–µ –¥–∞–º—É –±–∞“ì—ã—Ç—ã“£—ã–∑ –∞—à—ã–ª–∞–¥—ã.",
                time: "10‚Äì12 –º–∏–Ω—É—Ç",
                icon: "üåÄ", // Symbol of introspection, cycles, and inner work
                color: "purple",
                link: "https://www.eclecticenergies.com/enneagram/test",
              },
              {
                title: "CareerExplorer Personality Test",
                description:
                  "–¢“±–ª“ì–∞–ª—ã“õ “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä—ñ“£—ñ–∑–≥–µ –Ω–µ–≥—ñ–∑–¥–µ–ª—ñ–ø, –º–∞–º–∞–Ω–¥—ã“õ –±–∞“ì—ã—Ç—ã–Ω “±—Å—ã–Ω–∞–¥—ã.",
                result:
                  "–ú—ñ–Ω–µ–∑-“õ“±–ª“õ—ã“£—ã–∑“ì–∞ —Å–∞–π –∫–µ–ª–µ—Ç—ñ–Ω –Ω–∞“õ—Ç—ã –∫”ô—Å—ñ–ø —Ç“Ø—Ä–ª–µ—Ä—ñ –º–µ–Ω —Å–∞–ª–∞–ª–∞—Ä.",
                time: "25‚Äì30 –º–∏–Ω—É—Ç",
                icon: "üéØ", // Represents career goals and direction
                color: "indigo",
                link: "https://www.careerexplorer.com",
              },
            ].map((test, index) => (
              <div
                key={index}
                className="rounded-2xl border border-blue-100 bg-blue-50 p-6 transition-all hover:shadow-lg"
              >
                <div className="mb-4 text-3xl">{test.icon}</div>
                <h3 className="mb-2 text-lg font-semibold text-gray-800">
                  {test.title}
                </h3>
                <p className="mb-2 text-sm text-gray-600">
                  <p className="font-bold"> –°–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã: </p>
                  {test.description}
                </p>
                <p className="mb-4 text-sm text-gray-600">
                  <p className="font-bold"> –ù”ô—Ç–∏–∂–µ—Å—ñ–Ω–¥–µ: </p>
                  {test.result}
                </p>
                <div className="flex items-center justify-between">
                  <span className="text-xs text-gray-500">‚è±Ô∏è {test.time}</span>
                  <a
                    href={test.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="hover:underline"
                  >
                    <button className="rounded-lg bg-blue-600 px-4 py-2 text-sm text-white transition-all hover:bg-blue-700">
                      –¢–µ—Å—Ç ”©—Ç—É
                    </button>
                  </a>
                </div>
              </div>
            ))}
          </div>

          <div className="mt-8 rounded-2xl border border-yellow-100 bg-gradient-to-r from-yellow-50 to-orange-50 p-6">
            <h4 className="mb-2 font-semibold">üí° –¢–µ—Å—Ç—ñ–ª–µ—Ä —Ç—É—Ä–∞–ª—ã –µ—Å–∫–µ—Ä—Ç—É</h4>
            <p className="text-sm text-gray-700">
              –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è–ª—ã“õ —Ç–µ—Å—Ç—ñ–ª–µ—Ä –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ –∫–µ“£–µ—Å –±–µ—Ä—É –º–∞“õ—Å–∞—Ç—ã–Ω–¥–∞ “ì–∞–Ω–∞
              “õ–æ–ª–¥–∞–Ω—ã–ª–∞–¥—ã. –ù–∞“õ—Ç—ã –¥–∏–∞–≥–Ω–æ–∑ “õ–æ—é “Ø—à—ñ–Ω –º–∞–º–∞–Ω“ì–∞ –∂“Ø–≥—ñ–Ω—ñ“£—ñ–∑.
            </p>
          </div>
        </div>
      ),
    },
  ];
  return (
    <div>
      <GoBackButton />
      <PageTitle title={"üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±”©–ª—ñ–º—ñ"} />
      <SideBar sections={sections} />
    </div>
  );
}
